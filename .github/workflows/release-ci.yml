name: Release binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  Release:

    runs-on: 'windows-latest'
    name: Building Dipol-UF.exe & Host.exe

    defaults:
      run:
        shell: pwsh
    env: 
      GITHUB_NUGET_RO: ${{ secrets.NUGET_RO }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore Host
        run: |
           MSBuild.exe .\src\Host\Host.csproj -t:restore

      - name: Build Host x86
        run: |
           MSBuild.exe .\src\Host\Host.csproj -p:Configuration=Release -p:Platform=x86

      - name: Build Host x64
        run: |
           MSBuild.exe .\src\Host\Host.csproj -p:Configuration=Release -p:Platform=x64

          
      - name: Restore Dipol-UF
        run: |
           MSBuild.exe .\src\Dipol-UF\Dipol-UF.csproj -t:restore

      - name: Build Dipol-UF x86
        run: |
           MSBuild.exe .\src\Dipol-UF\Dipol-UF.csproj -p:Configuration=Release -p:Platform=x86

      - name: Build Dipol-UF x64
        run: |
           MSBuild.exe .\src\Dipol-UF\Dipol-UF.csproj -p:Configuration=Release -p:Platform=x64
           
           
      - name: Cleanup
        run: |
          Remove-Item .\src\Dipol-UF\bin\x64\Release\*64*.dll 
          Remove-Item .\src\Dipol-UF\bin\x86\Release\*32*.dll
          Remove-Item .\src\Host\bin\x64\Release\*64*.dll 
          Remove-Item .\src\Host\bin\x86\Release\*32*.dll
           
      - name: Pack artifacts
        run: |
          7z a Host_x64.zip .\src\Host\bin\x64\Release\* -y
          7z a Host_x86.zip .\src\Host\bin\x64\Release\* -y
          7z a Dipol-UF_x64.zip .\src\DIPOL-UF\bin\x64\Release\* -y
          7z a Dipol-UF_x86.zip .\src\DIPOL-UF\bin\x64\Release\* -y



      - name: Creating release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
            
      - name: Set version
        run: |
          echo "RELEASE_VERSION=$($env:GITHUB_REF.Substring(10))" >> $env:GITHUB_ENV

        

      - name: Host_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Host_x64.zip
          asset_name: ${{ format( 'Host_{0}_{1}.zip' , 'x64', env.RELEASE_VERSION ) }}
          asset_content_type: application/zip    
      
      - name: Host_x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Host_x86.zip
          asset_name: ${{ format( 'Host_{0}_{1}.zip' , 'x86', env.RELEASE_VERSION ) }}
          asset_content_type: application/zip
          
      - name: Dipol-UF_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Dipol-UF_x64.zip
          asset_name: ${{ format( 'Dipol-UF_{0}_{1}.zip' , 'x64', env.RELEASE_VERSION ) }}
          asset_content_type: application/zip    
      
      - name: Dipol-UF_x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Dipol-UF_x86.zip
          asset_name: ${{ format( 'Dipol-UF_{0}_{1}.zip' , 'x86', env.RELEASE_VERSION ) }}
          asset_content_type: application/zip    
