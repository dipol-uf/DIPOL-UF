<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:DIPOL_UF.ViewModels"
                    xmlns:enm="clr-namespace:ANDOR_CS.Enums;assembly=ANDOR_CS"
                    xmlns:cmnds="clr-namespace:DIPOL_UF.Commands"
                    xmlns:cnvrt="clr-namespace:DIPOL_UF.Converters">
    <HierarchicalDataTemplate x:Key="MenuBarItemTemplate" DataType="{x:Type vm:MenuItemViewModel}"
                              ItemsSource="{Binding MenuItems}">
        <Label Content="{Binding Header}"/>
    </HierarchicalDataTemplate>

    <!--Active cameras list representation-->
    <DataTemplate x:Key="FoundCamerasListViewItemTemplate">
        <StackPanel Orientation="Horizontal">
            <Label Width="80" Content="{Binding Key, Converter={StaticResource ResourceKey=CameraKeyToStringConverter}}" HorizontalContentAlignment="Right"/>
            <Label Content="{Binding Value, Converter={StaticResource ResourceKey=CameraToStringAliasConverter}}" HorizontalContentAlignment="Right"/>
        </StackPanel>
    </DataTemplate>
    
    <!--Main window tree view of connected cameras.-->
    <!--Cameras a grouped by location (e.g. Local or network address)-->
    <DataTemplate x:Key="ListTreeViewItemTemplate">
        <!--For each group there is expander with sublist of all associated cameras-->
        <!--Name is group name (i.e. location)-->
        <Expander Header="{Binding Name}" IsExpanded="True">
            <!--List of cameras in a group-->
            <ListView ItemsSource="{Binding CameraList}" 
                      Style="{StaticResource ResourceKey=ListTreeViewStyle}"
                      KeyboardNavigation.TabNavigation="Continue">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!--Vertical StackPanel contains horizontal panels per each row-->
                        <StackPanel Orientation="Vertical" Background="Transparent">
                            <StackPanel.ContextMenu>
                                <ContextMenu 
                                    ItemsSource="{Binding Value.ContextMenu}"
                                    ItemTemplate="{StaticResource MenuBarItemTemplate}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding Command}"/>
                                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <!--First horizontal panel is selection CheckBox and CameraName-->
                            <StackPanel Orientation="Horizontal">
                                <!--Checked/Unchecked events are forwarded to DipolWindow's context commands-->
                                <CheckBox Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}" VerticalAlignment="Center"
                                          Command="{Binding Path=DataContext.CameraPanelSelectionChangedCommand, 
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                          CommandParameter="{Binding Key}"
                                          TabIndex="{Binding TabIndex, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}">
                                    <CheckBox.IsChecked>
                                        <MultiBinding Converter="{StaticResource ResourceKey=CameraKeyToValueMultiConverter}" 
                                                      UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
                                            <Binding Path="Key" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" 
                                                     Path="DataContext.CameraPanelSelectedItems" Mode="OneWay"
                                                     UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </CheckBox.IsChecked>
                                </CheckBox>
                                      <!--Checked="{cmnds:EventToCommand CameraTreeViewSelectionChangedCommand, DataContextProviderControl=DipolWindow}"
                                      Unchecked="{cmnds:EventToCommand CameraTreeViewSelectionChangedCommand, DataContextProviderControl=DipolWindow}"-->
                                <!--CameraBase.ToString() to get camera name-->
                                <Label Content="{Binding Value.Camera, Converter={StaticResource ResourceKey=CameraToStringAliasConverter}}" VerticalAlignment="Center" Width="155"/>
                            </StackPanel>
                            <!--Second horizontal panel contains temperature information-->
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="70"  HorizontalAlignment="Right"
                                       HorizontalContentAlignment="Right"
                                       Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}"
                                       x:Name="TemperatureLabel">
                                    <!--Content is multi-bound to DipolWindow's Context colletion of camera statuses and to the string ID of a current camera (Key)-->
                                    <!--Converter parameter is used to retrieve specific parameter string from camera status dictionary-->
                                    <Label.Content>
                                        <MultiBinding
                                        Converter="{StaticResource ResourceKey=CameraStatsToStringMultiConverter}"
                                        ConverterParameter="Temp"
                                        UpdateSourceTrigger="PropertyChanged"
                                        StringFormat="\{0,6:#0.00\}">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Content>
                                    <!--Foreground is bound the same way to Temp value, but returned value is one of the StaticResource-->
                                    <!--pre-defined brush collection.-->
                                    <Label.Foreground>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=TemperatureToBrushMultiConverter}"
                                            ConverterParameter="{StaticResource TemperatureColorBrushCollection}"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Foreground>
                                </Label>
                                <Label VerticalAlignment="Center" HorizontalAlignment="Right">
                                    <!--Content comes from TempStatus TemperatureStatus enum-->
                                    <Label.Content>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=CameraStatsToStringMultiConverter}"
                                            ConverterParameter="TempStatus"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Content>
                                    <!--Color comes from the same status in accordance to static dictionary-->
                                    <Label.Foreground>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=TemperatureStatusToBrushMultiConverter}"
                                            ConverterParameter="{StaticResource TemperatureStatusColorBrushCollection}"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>                                            
                                        </MultiBinding>
                                    </Label.Foreground>
                                </Label>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Expander>
    </DataTemplate>
    
    
    <!--Camera tab view template-->
    <DataTemplate x:Key="TabControlItemTemplate" DataType="{x:Type vm:ConnectedCameraViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4.5*"/>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--PLACEHOLDER FOR IMAGE CONTROL-->
            <Canvas Grid.Row="0" Grid.Column="0"
                    Grid.RowSpan="3"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Canvas>
            <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding}"/>
            <Label Grid.Row="1" Grid.Column="1" BorderThickness="2" BorderBrush="Black">Detailed status</Label>
            <Grid Grid.Column="2" Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Slider Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center"
                        Orientation="Vertical" Name="TempSetSlider"
                        IsEnabled="{Binding Value.CanControlCooler, Mode=OneTime}"
                        Minimum="{Binding Value.MinimumAllowedTemperature, Mode=OneTime}"
                        Maximum="{Binding Value.MaximumAllowedTemperature, Mode=OneTime}"
                        Value="{Binding
                            Path=Value.TargetTemperature,
                            Mode=TwoWay,
                            UpdateSourceTrigger=PropertyChanged,
                            Converter={StaticResource ResourceKey=TypeConverter}}">
                    
                </Slider>
                <ProgressBar Grid.Column="1" Grid.Row="0" Width="10" HorizontalAlignment="Center"
                             Orientation="Vertical" IsIndeterminate="False"
                             Minimum="{Binding Value.MinimumAllowedTemperature, Mode=OneTime}"
                             Maximum="{Binding Value.MaximumAllowedTemperature, Mode=OneTime}"
                             IsEnabled="{Binding Value.CanQueryTemperature, Mode=OneTime}">
                    <ProgressBar.Value>
                        <MultiBinding Mode="OneWay"
                            Converter="{StaticResource ResourceKey=CameraStatsToValueMultiConverter}"
                            ConverterParameter="Temp"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                     Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Path="Key"/>
                        </MultiBinding>
                    </ProgressBar.Value>
                    <ProgressBar.Foreground>
                        <MultiBinding Mode="OneWay"
                                      Converter="{StaticResource ResourceKey=TemperatureToBrushMultiConverter}"
                                      ConverterParameter="{StaticResource TemperatureColorBrushCollection}"
                                      UpdateSourceTrigger="PropertyChanged">
                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                     Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                            <Binding Path="Key"/>
                        </MultiBinding>
                    </ProgressBar.Foreground>
                </ProgressBar>
                <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" 
                         Name="TempControlTextBox" Margin="2"
                         IsEnabled="{Binding Value.CanControlCooler, Mode=OneTime}"
                         TextChanged="{cmnds:EventToCommand VerifyTextInputCommand, PropertyName=Value}"
                         PreviewTextInput="{cmnds:EventToCommand VerifyTextInputCommand, PropertyName=Value}"
                         Text="{Binding
                            Path=Value.TargetTemperature,
                            Mode=TwoWay,
                            UpdateSourceTrigger=PropertyChanged,
                            Converter={StaticResource ResourceKey=SingleDoubleToStringConverter}}">

                </TextBox>
                <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" 
                        Command="{Binding Value.ControlCoolerCommand}">
                    <Button.Content>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Enabled}">
                                            <Setter Property="TextBlock.Text" Value="Enabled"/>
                                        </DataTrigger>
                                        <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Disabled}">
                                            <Setter Property="TextBlock.Text" Value="Disabled"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Button.Content>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>