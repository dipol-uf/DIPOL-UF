<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:DIPOL_UF.ViewModels"
                    xmlns:cmnds="clr-namespace:DIPOL_UF.Commands"
                    xmlns:cnvrt="clr-namespace:DIPOL_UF.Converters">
    <HierarchicalDataTemplate x:Key="MenuBarItemTemplate" DataType="{x:Type vm:MenuItemViewModel}"
                              ItemsSource="{Binding MenuItems}">
        <Label Content="{Binding Header}"/>
    </HierarchicalDataTemplate>

    <!--Active cameras list representation-->
    <DataTemplate x:Key="FoundCamerasListViewItemTemplate">
        <StackPanel Orientation="Horizontal">
            <Label Width="80" Content="{Binding Key, Converter={StaticResource ResourceKey=CameraKeyToStringConverter}}" HorizontalContentAlignment="Right"/>
            <Label Content="{Binding Value, Converter={StaticResource ResourceKey=CameraToStringAliasConverter}}" HorizontalContentAlignment="Right"/>
        </StackPanel>
    </DataTemplate>
    
    <!--Main window tree view of connected cameras.-->
    <!--Cameras a grouped by location (e.g. Local or network address)-->
    <DataTemplate x:Key="ListTreeViewItemTemplate">
        <!--For each group there is expander with sublist of all associated cameras-->
        <!--Name is group name (i.e. location)-->
        <Expander Header="{Binding Name}" IsExpanded="True">
            <!--List of cameras in a group-->
            <ListView ItemsSource="{Binding CameraList}" 
                      Style="{StaticResource ResourceKey=ListTreeViewStyle}"
                      KeyboardNavigation.TabNavigation="Continue">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <!--Vertical StackPanel contains horizontal panels per each row-->
                        <StackPanel Orientation="Vertical" Background="Transparent">
                            <StackPanel.ContextMenu>
                                <ContextMenu 
                                    ItemsSource="{Binding Value.ContextMenu}"
                                    ItemTemplate="{StaticResource MenuBarItemTemplate}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding Command}"/>
                                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <!--First horizontal panel is selection CheckBox and CameraName-->
                            <StackPanel Orientation="Horizontal">
                                <!--Checked/Unchecked events are forwarded to DipolWindow's context commands-->
                                <CheckBox Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}" VerticalAlignment="Center"
                                          Command="{Binding Path=DataContext.CameraPanelSelectionChangedCommand, 
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                          CommandParameter="{Binding Key}"
                                          TabIndex="{Binding TabIndex, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}">
                                    <CheckBox.IsChecked>
                                        <MultiBinding Converter="{StaticResource ResourceKey=CameraKeyToValueMultiConverter}" 
                                                      UpdateSourceTrigger="PropertyChanged" Mode="OneWay">
                                            <Binding Path="Key" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" 
                                                     Path="DataContext.CameraPanelSelectedItems" Mode="OneWay"
                                                     UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </CheckBox.IsChecked>
                                </CheckBox>
                                      <!--Checked="{cmnds:EventToCommnd CameraTreeViewSelectionChangedCommand, DataContextProviderControl=DipolWindow}"
                                      Unchecked="{cmnds:EventToCommnd CameraTreeViewSelectionChangedCommand, DataContextProviderControl=DipolWindow}"-->
                                <!--CameraBase.ToString() to get camera name-->
                                <Label Content="{Binding Value.Camera, Converter={StaticResource ResourceKey=CameraToStringAliasConverter}}" VerticalAlignment="Center" Width="155"/>
                            </StackPanel>
                            <!--Second horizontal panel contains temperature information-->
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="70"  HorizontalAlignment="Right"
                                       HorizontalContentAlignment="Right"
                                       Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}"
                                       x:Name="TemperatureLabel">
                                    <!--Content is multi-bound to DipolWindow's Context colletion of camera statuses and to the string ID of a current camera (Key)-->
                                    <!--Converter parameter is used to retrieve specific parameter string from camera status dictionary-->
                                    <Label.Content>
                                        <MultiBinding
                                        Converter="{StaticResource ResourceKey=CameraStatsToStringMultiConverter}"
                                        ConverterParameter="Temp"
                                        UpdateSourceTrigger="PropertyChanged"
                                        StringFormat="\{0,6:#0.00\}">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Content>
                                    <!--Foreground is bound the same way to Temp value, but returned value is one of the StaticResource-->
                                    <!--pre-defined brush collection.-->
                                    <Label.Foreground>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=TemperatureToBrushMultiConverter}"
                                            ConverterParameter="{StaticResource TemperatureColorBrushCollection}"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Foreground>
                                </Label>
                                <Label VerticalAlignment="Center" HorizontalAlignment="Right">
                                    <!--Content comes from TempStatus TemperatureStatus enum-->
                                    <Label.Content>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=CameraStatsToStringMultiConverter}"
                                            ConverterParameter="TempStatus"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>
                                        </MultiBinding>
                                    </Label.Content>
                                    <!--Color comes from the same status in accordance to static dictionary-->
                                    <Label.Foreground>
                                        <MultiBinding
                                            Converter="{StaticResource ResourceKey=TemperatureStatusToBrushMultiConverter}"
                                            ConverterParameter="{StaticResource TemperatureStatusColorBrushCollection}"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                                 UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="Key"/>                                            
                                        </MultiBinding>
                                    </Label.Foreground>
                                </Label>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Expander>
    </DataTemplate>
    
    
    <!--Camera tab view template-->
    <DataTemplate x:Key="TabControlItemTemplate" DataType="{x:Type vm:ConnectedCameraViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <!--PLACEHOLDER FOR IMAGE CONTROL-->
            <Canvas Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"></Canvas>
        </Grid>
    </DataTemplate>
</ResourceDictionary>