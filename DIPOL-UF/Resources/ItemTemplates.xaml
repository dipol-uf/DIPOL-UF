<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:DIPOL_UF.ViewModels"
                    xmlns:cntrl="clr-namespace:DIPOL_UF.Controls"
                    xmlns:ext="clr-namespace:DIPOL_UF.Extensions"
                    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:enums="clr-namespace:ANDOR_CS.Enums;assembly=ANDOR_CS">
    <HierarchicalDataTemplate x:Key="MenuBarItemTemplate"
                              DataType="{x:Type vm:MenuItemViewModel}"
                              ItemsSource="{Binding SubMenu}">
        <Label Content="{Binding Name}"/>
    </HierarchicalDataTemplate>
    <!--Active cameras list representation-->
    <DataTemplate x:Key="FoundCamerasListViewItemTemplate" >
        <StackPanel Orientation="Horizontal">
            <Label Width="80" Content="{Binding Item1}" HorizontalContentAlignment="Right"/>
            <Label Content="{Binding Item2}" HorizontalContentAlignment="Right"/>
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger
                    EventName="MouseDoubleClick"
                    SourceObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}">
                    <behaviors:InvokeCommandAction
                        Command="{Binding 
                            RelativeSource={RelativeSource FindAncestor, AncestorType=Window},
                            Path=DataContext.ClickCommand}">
                        <behaviors:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource CombineConverter}">
                                <Binding Path="DataContext.Item3" 
                                         RelativeSource="{RelativeSource FindAncestor, AncestorType=StackPanel}"/>
                                <Binding 
                                    RelativeSource="{RelativeSource FindAncestor, AncestorType=Window}"/>
                            </MultiBinding>
                        </behaviors:InvokeCommandAction.CommandParameter>
                    </behaviors:InvokeCommandAction>    
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </StackPanel>
    </DataTemplate>
    
    <!--Main window tree view of connected cameras.-->
    <!--Cameras a grouped by location (e.g. Local or network address)-->
    <DataTemplate x:Key="ListTreeViewItemTemplate"
                  DataType="vm:MainWindowTreeViewModel">
        <!--For each group there is expander with sublist of all associated cameras-->
        <!--Name is group name (i.e. location)-->
        <Expander Header="{Binding GroupName}" IsExpanded="True">
            <!--List of cameras in a group-->
            <ItemsControl ItemsSource="{Binding CameraList}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <!--Vertical StackPanel contains horizontal panels per each row-->
                        <StackPanel Orientation="Vertical" Background="Transparent">
                            <StackPanel.ContextMenu>
                                <ContextMenu 
                                    ItemsSource="{Binding ContextMenu}"
                                    ItemTemplate="{StaticResource MenuBarItemTemplate}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                            <Setter Property="Command" Value="{Binding Command}"/>
                                            <Setter Property="CommandParameter" 
                                                    Value="{Binding DataContext.Id, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <!--First horizontal panel is selection CheckBox and CameraName-->
                            <StackPanel Orientation="Horizontal">
                                <!--Checked/Unchecked events are forwarded to DipolWindow's context commands-->
                                <CheckBox Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}" VerticalAlignment="Center"
                                          IsChecked="{Binding IsSelected, Mode=OneWay}"
                                          IsThreeState="False"
                                          Command="{Binding SelectCommand}"
                                          CommandParameter="{Binding Id}">
                                </CheckBox>
                                <Label Content="{Binding Name}" VerticalAlignment="Center" Width="155"/>
                            </StackPanel>
                            <!--Second horizontal panel contains temperature information-->
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="70"  HorizontalAlignment="Right"
                                       HorizontalContentAlignment="Right"
                                       Margin="{StaticResource ResourceKey=OneLevelTreeItemMarginLeft}"
                                       Content="{Binding Temperature}" ContentStringFormat="{ext:Text Key=General_FloatTempFormat}"
                                       Foreground="{Binding Temperature, 
                                            Converter={StaticResource TemperatureToBrushConverter},
                                            ConverterParameter={StaticResource TemperatureColorBrushCollection}}"
                                       x:Name="TemperatureLabel">
                                    
                                </Label>
                                <Label VerticalAlignment="Center" HorizontalAlignment="Right"
                                       x:Name="TemperatureStatusLabel"
                                       Content="{Binding TempStatus, Converter={StaticResource EnumToDescriptionConverter}}"
                                       Foreground="{Binding TempStatus, 
                                            Converter={StaticResource TemperatureStatusToBrushConverter},
                                            ConverterParameter={StaticResource TemperatureStatusColorBrushCollection}}">
                                </Label>
                                <Label VerticalAlignment="Center" HorizontalAlignment="Right"
                                       Content="{Binding FanMode, Converter={StaticResource EnumToDescriptionConverter}}"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Expander>
    </DataTemplate>
    
    
    <!--Camera tab view template-->
    <DataTemplate 
        x:Key="TabControlItemTemplate" 
        DataType="{x:Type vm:CameraTabViewModel}">
        <cntrl:CameraTab/>
    </DataTemplate>

    <DataTemplate 
        x:Key="TabControlItemHeaderTemplate"
        DataType="{x:Type vm:CameraTabViewModel}">
        <TextBlock
            Text="{Binding Camera, Mode=OneWay, Converter={StaticResource CameraToStringAliasConverter}}">
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="ShutterComboBoxItem" DataType="enums:ShutterMode">
        <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
    </DataTemplate>
        
</ResourceDictionary>