<!--This file is part of Dipol-3 Camera Manager.

 MIT License
 
 Copyright(c) 2018-2019 Ilia Kosenkov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:extensions="clr-namespace:DIPOL_UF.Extensions" 
                    >
    <Style x:Key="ThumbWithValueToolTip" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" >
            <Setter.Value>
                <RadialGradientBrush  SpreadMethod="Pad" 
                                      GradientStops="{StaticResource SliderThumbRadialGradientCollection}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" 
                                            Margin ="-60, -20, -60, 0" Visibility="{Binding IsMouseOver, ConverterParameter={x:Static Visibility.Collapsed}, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}">
                            <Border BorderThickness="1" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
                                    Background="{x:Static SystemColors.InfoBrush}">
                                <Border.Margin>
                                    <Binding Path ="FontSize"
                                             RelativeSource="{RelativeSource AncestorType={x:Type Slider}, Mode=FindAncestor}"
                                             Converter="{StaticResource MarginModifierConverter}">
                                        <Binding.ConverterParameter>
                                            <Thickness Top="-1.25"/>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Border.Margin>
                                <TextBlock TextAlignment="Center" 
                                           HorizontalAlignment="Stretch"
                                           Margin="2" Padding="2"
                                           Foreground="{x:Static SystemColors.InfoTextBrush}" Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}, StringFormat={extensions:Text Key=Slider_PixelToolTipFormat}}"/>
                            </Border>
                        </ContentControl>
                        <Ellipse x:Name="PART_ThumbGeometry"
                                 Grid.Row="1"  Height="20" Width="20"
                                 Margin="0" StrokeThickness="1"
                                 Stroke="{x:Static SystemColors.ActiveBorderBrush}"
                                 Fill="{TemplateBinding Foreground}"
                                 />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="PART_ThumbGeometry" 
                                    Value="{StaticResource ColorDisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_ThumbGeometry" 
                                    Value="{StaticResource BorderColorDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectorThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" >
            <Setter.Value>
                <RadialGradientBrush  SpreadMethod="Pad" 
                                      GradientStops="{StaticResource SelectorSliderThumbGradientCollection}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="PART_ThumbGeometry"
                                 Height="20" Width="20"
                                 Margin="0" StrokeThickness="0.5"
                                 Stroke="Black"
                                 Fill="{TemplateBinding Foreground}"
                                 />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="PART_ThumbGeometry" 
                                    Value="{StaticResource ColorDisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_ThumbGeometry" 
                                    Value="{StaticResource BorderColorDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonForSlider" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
                            Background="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}, Mode=FindAncestor}}"
                           BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}, Mode=FindAncestor}}"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type RepeatButton}, Mode=FindAncestor}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderWithValueToolTip" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush 
                    GradientStops="{StaticResource SliderTrackGradientCollection}"
                    StartPoint="0, 0"
                    EndPoint="0,1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="{TemplateBinding MinHeight}"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" x:Name="PART_Border"
                                VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                Height="8" 
                                BorderThickness="1"
                                BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
                                Margin="3, 0, 3, 0"
                                Background="{TemplateBinding Background}"/>
                        <Track Grid.Row="0" x:Name="PART_Track"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Stretch">
                            <Track.Thumb>
                                <Thumb x:Name="PART_Thumb" 
                                    Style="{StaticResource ThumbWithValueToolTip}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton 
                                    Margin="0, 0, 12.5, 0"
                                    Command="Slider.DecreaseLarge"
                                    Style="{StaticResource RepeatButtonForSlider}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Margin="-2.5, 0, 0, 0"
                                    Command="Slider.IncreaseLarge"
                                    Style="{StaticResource RepeatButtonForSlider}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="Background" 
                                    Value="{StaticResource ColorDisabledBrush}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" 
                                    Value="{StaticResource BorderColorDisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SlaveMasterSlider" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Minimum" Value="1"/>
        <Setter Property="Maximum" Value="2"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="{TemplateBinding MinHeight}"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" x:Name="PART_Border"
                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                BorderThickness="1" 
                                CornerRadius="10"
                                BorderBrush="{x:Static SystemColors.ActiveBorderBrush}"
                                Margin="0, 0, 0, 0"
                               >
                            <Border.Background>
                                <SolidColorBrush x:Name="PART_BorderBrush" 
                                                 Color="{StaticResource BackgroundColor_2}"
                                                 />
                            </Border.Background>
                        </Border>
                        <Track Grid.Row="0" x:Name="PART_Track"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Stretch"
                               Margin="3, 0, 3, 0">
                            <Track.Thumb>
                                <Thumb x:Name="PART_Thumb" 
                                    Style="{StaticResource SelectorThumb}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton 
                                    Margin="0, 0, 12.5, 0"
                                    Command="Slider.DecreaseLarge"
                                    Style="{StaticResource RepeatButtonForSlider}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Margin="-2.5, 0, 0, 0"
                                    Command="Slider.IncreaseLarge"
                                    Style="{StaticResource RepeatButtonForSlider}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="Background" 
                                    Value="{StaticResource ColorDisabledBrush}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" 
                                    Value="{StaticResource BorderColorDisabledBrush}"/>
                        </Trigger>
                        <!--<Trigger Property="Value" Value="3">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Animation_To_3">
                                    <Storyboard Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color">
                                        <ColorAnimation 
                                            From="{StaticResource BackgroundColor_2}"
                                            To="{StaticResource BackgroundColor_3}"
                                            Duration="{StaticResource ColorChangeDuration}"
                                            FillBehavior="HoldEnd"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Animation_From_3">
                                    <Storyboard Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color">
                                        <ColorAnimation 
                                            From="{StaticResource BackgroundColor_3}"
                                            To="{StaticResource BackgroundColor_2}"
                                            Duration="{StaticResource ColorChangeDuration}"
                                            FillBehavior="Stop"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>-->
                        <Trigger Property="Value" Value="1">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="Animation_To_1" >
                                    <Storyboard Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color"
                                               >
                                        <ColorAnimation 
                                            From="{StaticResource BackgroundColor_3}"
                                            To="{StaticResource BackgroundColor_1}"
                                            Duration="{StaticResource ColorChangeDuration}"
                                            FillBehavior="HoldEnd"
                                           />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="Animation_From_1">
                                    <Storyboard Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color">
                                        <ColorAnimation 
                                            From="{StaticResource BackgroundColor_1}"
                                            To="{StaticResource BackgroundColor_3}"
                                            Duration="{StaticResource ColorChangeDuration}"
                                            FillBehavior="Stop"
                                            />
                                    </Storyboard>
                                </BeginStoryboard>
                                <ResumeStoryboard BeginStoryboardName="Animation_To_1"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxWithErrors" BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="extensions:ValidationAdorner.Adorner" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxWithErrors" BasedOn="{StaticResource ContentFont}" TargetType="{x:Type CheckBox}">
        <Setter Property="extensions:ValidationAdorner.Adorner" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="#FF212121" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <!-- ReSharper disable once Xaml.RedundantPropertyTypeQualifier -->
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxWithErrors" BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="extensions:ValidationAdorner.Adorner" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="outerBorder" BorderThickness="{StaticResource BorderThickness}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <!--<themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                MinWidth="{Binding ActualWidth, ElementName=templateRoot}">-->
                                    <Border x:Name="DropDownBorder" 
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                            BorderThickness="1"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                <!--</themes:SystemDropShadowChrome>-->
                            </Popup>
                            <ToggleButton x:Name="toggleButton" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Press"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                        <Border.Background>
                                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                            <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                        </Trigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                        <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                                        </Trigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                            <Setter Property="Background" TargetName="splitBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                        <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                                        </MultiDataTrigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                                        </Trigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                            <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                                        </MultiDataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter Grid.Column="0" x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="False" 
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
