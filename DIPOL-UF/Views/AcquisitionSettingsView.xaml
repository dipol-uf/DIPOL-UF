<!--This file is part of Dipol-3 Camera Manager.

 MIT License
 
 Copyright(c) 2018-2019 Ilia Kosenkov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.-->    
<Window x:Class="DIPOL_UF.Views.AcquisitionSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:extensions="clr-namespace:DIPOL_UF.Extensions"
        xmlns:viewModels="clr-namespace:DIPOL_UF.ViewModels"
        mc:Ignorable="d"
        Title="{extensions:Text Key=AcquisitionSettings_WindowName}"  WindowStyle="ToolWindow" 
        Topmost="True" WindowStartupLocation="CenterOwner"
        Height="545" Width="350"
        MinWidth="300" MinHeight="400"
        Style="{StaticResource ResourceKey=ContentFont}"
        d:DataContext="{d:DesignInstance viewModels:AcquisitionSettingsViewModel}"
        ResizeMode="NoResize">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <TabItem Header="{extensions:Text Key=AcquisitionSettings_Settings}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <Border>
                            <Border.Style>
                                <Style BasedOn="{StaticResource ErrorBorderStyle}" TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group1ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                                            Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                                        </DataTrigger>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group1ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                            Value="False">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentControl Content="{Binding}"/>
                        </Border>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                <AdornerDecorator>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <!--Left-hand side labels-->
                        <TextBlock Grid.Row="0" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Exposure time" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="VS speed" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="VS amplitude" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="3" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="ADC bit depth" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="4" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Amplifier" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="5" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="HS speed" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="6" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Preamp gain" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="7" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Acquisition mode" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="8" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Frame transfer" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="9" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Read mode" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="10" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="Trigger mode" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="11" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   Text="EM CCD gain" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <!--Right-hand side controls-->
                        <!--Exposure time-->
                        <TextBox x:Name="ExpTimeTextBox" Grid.Row="0" Grid.Column="1"
                                 extensions:ValidationAdorner.Adorner="True"
                                 Text="{extensions:ValidationBinding Path=ExposureTimeText}"
                                 IsEnabled="{Binding IsAvailable.ExposureTimeText}"
                                 Style="{StaticResource TextBoxStyle}">
                        </TextBox>
                        <!--VS Speed-->
                        <ComboBox Grid.Row="1" Grid.Column="1"
                                  ItemsSource="{Binding Camera.Properties.VSSpeeds}"
                                  SelectedIndex="{extensions:ValidationBinding
                                    Path=VsSpeed, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.VsSpeed}">
                        </ComboBox>
                        <!--VS Amplitude-->
                        <ComboBox Grid.Row="2" Grid.Column="1"
                                  ItemsSource="{Binding 
                                    Source={StaticResource ResourceKey=VSAmplitudeEnumProvider}}"
                                  SelectedItem="{extensions:ValidationBinding
                                    Path=VsAmplitude, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.VsAmplitude}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBoxItem">
                                    <ContentControl 
                                        Content="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--AD Converter-->
                        <ComboBox Grid.Row="3" Grid.Column="1"
                                  ItemsSource="{Binding Camera.Properties.ADConverters}"
                                  SelectedIndex="{extensions:ValidationBinding 
                                    Path=AdcBitDepth, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.AdcBitDepth}">
                        </ComboBox>
                        <!--Amplifier-->
                        <ComboBox Grid.Row="4" Grid.Column="1"
                                  ItemsSource="{Binding 
                                    Camera.Properties.OutputAmplifiers,
                                    Converter={StaticResource ValueTupleToValueConverter},
                                    ConverterParameter=Item2}"
                                  SelectedItem="{extensions:ValidationBinding
                                    Path=Amplifier, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.Amplifier}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBoxItem">
                                    <ContentControl
                                        Content="{Binding
                                            Converter={StaticResource EnumToDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--HS Speed-->
                        <ComboBox Grid.Row="5" Grid.Column="1"
                                  ItemsSource="{Binding
                                    Path=AvailableHsSpeeds,
                                    Mode=OneWay}"
                                  SelectedIndex="{extensions:ValidationBinding
                                    HsSpeed, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.HsSpeed}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBoxItem">
                                    <ContentControl
                                        Content="{Binding 
                                            Converter={StaticResource ValueTupleToValueConverter},
                                            ConverterParameter=Item2}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--Pre Amp Gain-->
                        <ComboBox Grid.Row="6" Grid.Column="1"
                                  ItemsSource="{Binding
                                    Path=AvailablePreAmpGains,
                                    Mode=OneWay}"
                                  SelectedIndex="{extensions:ValidationBinding
                                    Path=PreAmpGain, 
                                    Mode=TwoWay}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.PreAmpGain}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBoxItem">
                                    <ContentPresenter
                                        Content ="{Binding 
                                            Converter={StaticResource ValueTupleToValueConverter}, 
                                            ConverterParameter=Item2}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--Acquisition Mode-->
                        <ComboBox Grid.Row="7" Grid.Column="1"
                                  ItemsSource="{Binding
                                    Path=AllowedAcquisitionModes,
                                    Mode=OneWay}"
                                  SelectedItem="{extensions:ValidationBinding Path=AcquisitionMode}"
                                  Style="{StaticResource ComboBoxWithErrors}"
                                  IsEnabled="{Binding IsAvailable.AcquisitionMode}">
                         <ComboBox.ItemTemplate>
                             <DataTemplate DataType="ComboBoxItem">
                                 <ContentControl
                                     Content="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                             </DataTemplate>
                         </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--Frame transfer-->
                        <CheckBox Grid.Row="8" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Margin="{StaticResource ResourceKey=DefaultMargin}" IsThreeState="False"
                                  IsChecked="{Binding 
                                    FrameTransfer, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged, 
                                    ValidatesOnNotifyDataErrors=True}"
                                  IsEnabled="{Binding IsAvailable.FrameTransfer}"
                                  Style="{StaticResource CheckBoxWithErrors}">
                        </CheckBox>
                        <!--Readout mode-->
                        <ComboBox Grid.Row="9" Grid.Column="1"
                                  ItemsSource="{Binding
                                    Path=AvailableReadModes,
                                    Mode=OneWay}"
                                  SelectedItem="{Binding
                                    Path=ReadMode,
                                    UpdateSourceTrigger=PropertyChanged,
                                    ValidatesOnNotifyDataErrors=True}"
                                  IsEnabled="{Binding IsAvailable.ReadMode}"
                                  Style="{StaticResource ComboBoxWithErrors}">
                           <ComboBox.ItemTemplate>
                               <DataTemplate DataType="ComboBoxItem">
                                   <ContentControl
                                       Content="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                               </DataTemplate>
                           </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--Trigger mode-->
                        <ComboBox Grid.Row="10" Grid.Column="1"
                                  ItemsSource="{Binding
                                    Path=AllowedTriggerModes,
                                    Mode=OneWay}"
                                  SelectedItem="{Binding
                                    Path=TriggerMode,
                                    UpdateSourceTrigger=PropertyChanged,
                                    ValidatesOnNotifyDataErrors=True}"
                                  IsEnabled="{Binding IsAvailable.TriggerMode}"
                                  Style="{StaticResource ComboBoxWithErrors}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="ComboBoxItem">
                                    <ContentControl
                                        Content="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <!--EMCCD gain-->
                        <Grid Grid.Row="11" Grid.Column="1" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0"
                                     Text="{extensions:ValidationBinding EmCcdGainText}"
                                     IsEnabled="{Binding IsAvailable.EmCcdGainText}"
                                     Style="{StaticResource TextBoxWithErrors}">
                            </TextBox>
                            <Label Grid.Column="1"
                                Style="{StaticResource ContentFont_Label}"
                                Content="{Binding AllowedGain}"
                                Visibility="{Binding IsAvailable.EmCcdGainText,
                                        Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Grid>
                    </Grid>
                </ScrollViewer>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="{extensions:Text Key=AcquisitionSettings_ImageSize}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <Border>
                            <Border.Style>
                                <Style BasedOn="{StaticResource ErrorBorderStyle}" TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group2ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                                            Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                                        </DataTrigger>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group2ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                            Value="False">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentControl Content="{Binding}"/>
                        </Border>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                <AdornerDecorator>
                    <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                     <!--Image area-->
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               Text="Image Area"/>
                    <TextBlock Grid.Row="1" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   HorizontalAlignment="Right" VerticalAlignment="Center">
                        X<Run BaselineAlignment="Subscript" 
                              FontSize="{StaticResource ResourceKey=SmallFontSize}" >1</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   HorizontalAlignment="Right" VerticalAlignment="Center">
                        Y<Run BaselineAlignment="Subscript" 
                              FontSize="{StaticResource ResourceKey=SmallFontSize}" >1</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   HorizontalAlignment="Right" VerticalAlignment="Center">
                        X<Run BaselineAlignment="Subscript" 
                              FontSize="{StaticResource ResourceKey=SmallFontSize}" >2</Run>
                    </TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="0"
                                   Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                   HorizontalAlignment="Right" VerticalAlignment="Center">
                        Y<Run BaselineAlignment="Subscript" 
                              FontSize="{StaticResource ResourceKey=SmallFontSize}" >2</Run>
                    </TextBlock>
                    <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                        <TextBlock
                                    Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                    VerticalAlignment="Center"
                                    Text="{extensions:Text Key=AcquisitionSettings_DetectorSize}"/>
                        <TextBlock
                                Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                VerticalAlignment="Center"
                                Text="{Binding DetectorSize}"/>
                    </StackPanel>
                     <!--Image Area controls-->
                    <TextBox Grid.Row="1" Grid.Column="1" 
                             Width="100" HorizontalAlignment="Left"
                             Text="{extensions:ValidationBinding 'ImageArea_X1'}"
                             IsEnabled="{Binding IsAvailable.ImageArea}"
                             Style="{StaticResource TextBoxWithErrors}"/>
                    <TextBox Grid.Row="2" Grid.Column="1"
                              Width="100" HorizontalAlignment="Left"
                              Text="{extensions:ValidationBinding 'ImageArea_Y1'}"
                              IsEnabled="{Binding IsAvailable.ImageArea}"
                              Style="{StaticResource TextBoxWithErrors}"/>
                    <TextBox Grid.Row="3" Grid.Column="1"
                              Width="100" HorizontalAlignment="Left"
                              Text="{extensions:ValidationBinding 'ImageArea_X2'}"
                              IsEnabled="{Binding IsAvailable.ImageArea}"
                              Style="{StaticResource TextBoxWithErrors}"/>
                    <TextBox Grid.Row="4" Grid.Column="1"
                              Width="100" HorizontalAlignment="Left"
                              Text="{extensions:ValidationBinding 'ImageArea_Y2'}"
                              IsEnabled="{Binding IsAvailable.ImageArea}"
                              Style="{StaticResource TextBoxWithErrors}"/>

                    </Grid>
                </AdornerDecorator>
            </TabItem>
            <TabItem Header="{extensions:Text Key=AcquisitionSettings_Cycles}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <Border>
                            <Border.Style>
                                <Style BasedOn="{StaticResource ErrorBorderStyle}" TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group3ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                                            Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderErrorColor}"/>
                                        </DataTrigger>
                                        <DataTrigger 
                                            Binding="{Binding 
                                                DataContext.Group3ContainsErrors,
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                                            Value="False">
                                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBorderDefaultColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentControl Content="{Binding}"/>
                        </Border>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                <AdornerDecorator>
                    <Grid VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Section labels-->
                        <Rectangle Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Height="{StaticResource BorderThicknessValue}"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Left"
                                   Text="{extensions:Text Key=AcquisitionSettings_AccumulationCycle}"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <Rectangle Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Height="{StaticResource BorderThicknessValue}"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <Rectangle Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="3"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Height="{StaticResource BorderThicknessValue}"
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleBlock, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="6"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Left"
                                   Text="{extensions:Text Key=AcquisitionSettings_KineticCycle}" 
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleBlock, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <Rectangle Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="3"
                                   HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Height="{StaticResource BorderThicknessValue}"
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleBlock, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <!--Settings labels-->
                        <TextBlock Grid.Column="0" Grid.Row="3"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Right"
                                   Text="{extensions:Text Key=AcquisitionSettings_CycleTime}"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="4"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Right"
                                   Text="{extensions:Text Key=AcquisitionSettings_CycleNumber}"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleNumber, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <Rectangle Grid.Column="1" Grid.Row="3" Grid.RowSpan="2"
                                   HorizontalAlignment="Right" VerticalAlignment="Stretch" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Width="{StaticResource BorderThicknessValue}" Margin="4"
                                   Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="8"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Right"
                                   Text="{extensions:Text Key=AcquisitionSettings_CycleTime}"
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBlock Grid.Column="0" Grid.Row="9"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Right"
                                   Text="{extensions:Text Key=AcquisitionSettings_CycleNumber}"
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleNumber, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <Rectangle Grid.Column="1" Grid.Row="8" Grid.RowSpan="2"
                                   HorizontalAlignment="Right" VerticalAlignment="Stretch" 
                                   Style="{StaticResource RectangleAsSeparatorStyle}"
                                   Width="{StaticResource BorderThicknessValue}"
                                   Visibility="{Binding 
                                        IsAvailable.KineticCycleBlock, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <!-- Input textboxes -->
                        <TextBox Grid.Column="2" Grid.Row="3" Width="100" HorizontalAlignment="Left"
                                 Style="{StaticResource TextBoxWithErrors}"
                                 Text="{extensions:ValidationBinding AccumulateCycleTime}"
                                 Visibility="{Binding 
                                        IsAvailable.AccumulateCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBox Grid.Column="2" Grid.Row="4" Width="100" HorizontalAlignment="Left"
                                 Style="{StaticResource TextBoxWithErrors}"
                                 Text="{extensions:ValidationBinding AccumulateCycleNumber}"
                                 Visibility="{Binding 
                                        IsAvailable.AccumulateCycleNumber, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBox Grid.Column="2" Grid.Row="8" Width="100" HorizontalAlignment="Left"
                                 Style="{StaticResource TextBoxWithErrors}"
                                 Text="{extensions:ValidationBinding KineticCycleTime}"
                                 Visibility="{Binding 
                                        IsAvailable.KineticCycleTime, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>
                        <TextBox Grid.Column="2" Grid.Row="9" Width="100" HorizontalAlignment="Left"
                                 Style="{StaticResource TextBoxWithErrors}"
                                 Text="{extensions:ValidationBinding KineticCycleNumber}"
                                 Visibility="{Binding 
                                        IsAvailable.KineticCycleNumber, 
                                        Converter={StaticResource BoolToVisibilityConverter},
                                        ConverterParameter={x:Static Visibility.Collapsed}}"/>

                        <!-- Notifies if no cycles settings are available -->
                        <TextBlock Grid.Column="0" Grid.Row="10" Grid.ColumnSpan="3"
                                   Style="{StaticResource ContentFont_TextBlock}"
                                   HorizontalAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="{extensions:Text Key=AcquisitionSettings_AcquisitionModeDoesNotSupportCycles}">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{StaticResource BoolToBoolMultiConverter}" 
                                              ConverterParameter="{StaticResource BoolToVisibilityConverter}">
                                <Binding Path="IsAvailable.KineticCycleBlock" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="IsAvailable.AccumulateCycleTime" Converter="{StaticResource NotConverter}"/>
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>
                </Grid>
            </AdornerDecorator>
        </TabItem>
    </TabControl>
        <!--Save-->
        <Button Grid.Column="0" Grid.Row="1" 
                Style="{StaticResource ResourceKey=BasicButtonStyle}"
                Content="{extensions:Text Key=General_Save}"
                Command="{Binding SaveCommand}"/>
        <!--Load-->
        <Button Grid.Column="1" Grid.Row="1"
                Style="{StaticResource ResourceKey=BasicButtonStyle}"
                Content="{extensions:Text Key=General_Load}"
                Command="{Binding LoadCommand}"/>
        <!--Submit-->
        <Button Grid.Column="0" Grid.Row="2" 
                Style="{StaticResource ResourceKey=PositiveEffectButtonStyle}"
                Content="{extensions:Text Key=General_Submit}"
                Command="{Binding SubmitCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
        <!--Cancel-->
        <Button Grid.Column="1" Grid.Row="2"
                Style="{StaticResource ResourceKey=NegativeEffectButtonStyle}"
                Content="{extensions:Text Key=General_Cancel}"
                Command="{Binding CancelCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
    </Grid>
</Window>
