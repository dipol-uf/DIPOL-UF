<!--This file is part of Dipol-3 Camera Manager.

 MIT License
 
 Copyright(c) 2018-2019 Ilia Kosenkov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.-->
<Window x:Class="DIPOL_UF.Views.DipolMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vs="clr-namespace:DIPOL_UF.Views"
        xmlns:vms="clr-namespace:DIPOL_UF.ViewModels"
        xmlns:extensions="clr-namespace:DIPOL_UF.Extensions"
        Title="{extensions:Text Key=ApplicationName}" 
        Height="960" Width="1280" HorizontalContentAlignment="Stretch" 
        MinWidth="768" MinHeight="576" WindowStartupLocation="CenterScreen"
        Style="{StaticResource ResourceKey=ContentFont}"
        x:Name="DipolWindow"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vms:DipolMainWindowViewModel}">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction
                Command="{Binding WindowLoadedCommand}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger
            EventName="ViewRequested"
            SourceObject="{Binding ProgressBarProxy}">
            <extensions:ShowViewAction 
                Owner="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Proxy="{Binding ProgressBarProxy}"
                Type="{x:Type vs:ProgressWindow}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger
            EventName="ViewRequested"
            SourceObject="{Binding AvailableCamerasProxy}">
            <extensions:ShowViewAction
                Owner="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Proxy="{Binding AvailableCamerasProxy}"
                Type ="{x:Type vs:AvailableCameraView}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid DockPanel.Dock="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Menu DockPanel.Dock="Top" x:Name="MenuBar" VerticalAlignment="Top" VerticalContentAlignment="Center"
              Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
              Style="{StaticResource ResourceKey=MenuBarStyle}"      
              ItemTemplate="{StaticResource ResourceKey=MenuBarItemTemplate}"/>

        
        <TabControl x:Name="CameraTabs" Margin="2"
                    Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    ItemsSource="{Binding CameraTabs}"
                    ContentTemplate="{StaticResource ResourceKey=TabControlItemTemplate}"
                    ItemContainerStyle="{StaticResource ResourceKey=TabItemStyle}">
         </TabControl>
        
        <Border HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="2, 4, 2, 2"
                Grid.Row="1" Grid.Column="1"
                Style="{StaticResource ResourceKey=BorderStyle}">
            <Grid Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                
                <Border Grid.Row="0" 
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        Style="{StaticResource ResourceKey=BorderStyle}"
                        BorderThickness="{StaticResource ResourceKey=BottomOnlyBorderThickness}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Left" 
                                    Margin="10, 0, 0, 0"
                                    IsThreeState="True"
                                    IsEnabled="{Binding AnyCameraConnected}"
                                    x:Name="SelectAllCheckBox"
                                    IsChecked="{Binding AllCamerasSelected, Mode=OneWay}"
                                    Command="{Binding SelectAllCamerasCommand}"
                                    />

                        <Label x:Name="ConnectedCamerasLabel" 
                                Content="{extensions:Text Key=MainWindow_CameraManager}" 
                                HorizontalAlignment="Center" VerticalAlignment="Stretch" 
                                VerticalContentAlignment="Center"/>
                    </Grid>
                </Border>
                <ScrollViewer TabIndex="0" Grid.Row="1" >
                    <ItemsControl x:Name="CameraTreeListView" 
                            KeyboardNavigation.ControlTabNavigation="Cycle"
                            ItemsSource="{Binding CameraPanel}"
                            ItemTemplate="{StaticResource ResourceKey=ListTreeViewItemTemplate}"/>
                </ScrollViewer>
                <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                        Grid.Row="2" 
                        Style="{StaticResource ResourceKey=BorderStyle}"
                        BorderThickness="{StaticResource ResourceKey=TopOnlyBorderThickness}">
                    <DockPanel>
                        <Button x:Name="ConnectNewCamerasButton" DockPanel.Dock="Left"
                                Style="{StaticResource ResourceKey=PositiveEffectButtonStyle}" 
                                Content="{extensions:Text Key=General_Connect}"
                                Command="{Binding ConnectButtonCommand}"
                                CommandParameter="{Binding ElementName=DipolWindow}"
                                />
                        <Button x:Name="ReleaseExistingCamerasButton" DockPanel.Dock="Right"
                                Style="{StaticResource ResourceKey=NegativeEffectButtonStyle}" 
                                Content="{extensions:Text Key=General_Disconnect}"
                                Command="{Binding DisconnectButtonCommand}" 
                                />
                    </DockPanel>
                </Border>
                <Border  VerticalAlignment="Bottom" 
                         Grid.Row="3" 
                        Style="{StaticResource ResourceKey=BorderStyle}"
                        BorderThickness="{StaticResource ResourceKey=TopOnlyBorderThickness}">
                    <DockPanel>
                    <Button DockPanel.Dock="Left"
                        HorizontalAlignment="Center" IsEnabled="True"
                        Command="{Binding PolarimeterMotorButtonCommand}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BasicButtonStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasPolarimeterMotor}" Value="True">
                                        <Setter Property="Content" Value="{extensions:Text Key=MainWindow_PolarimeterButton_Present}"/>
                                        <Setter Property="Background" Value="{StaticResource PositiveEffectButtonBackgroundColor}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasPolarimeterMotor}" Value="False">
                                        <Setter Property="Content" Value="{extensions:Text Key=MainWindow_PolarimeterButton_None}"/>
                                        <Setter Property="Background" Value="{StaticResource NegativeEffectButtonBackgroundColor}"></Setter>
                                    </DataTrigger>
                                    </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button DockPanel.Dock="Right"
                            Style="{StaticResource ResourceKey=BasicButtonStyle}"
                            Content="Remote Sessions"
                            HorizontalAlignment="Center" IsEnabled="False"/>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <StatusBar Name="DipolStatusBar" 
                   Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                   VerticalAlignment="Bottom"
                   Style="{StaticResource ResourceKey=StatusBarStyle}"></StatusBar>
    </Grid>
</Window>
