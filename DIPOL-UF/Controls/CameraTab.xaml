<!--This file is part of Dipol-3 Camera Manager.

 MIT License
 
 Copyright(c) 2018-2019 Ilia Kosenkov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
 
 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.-->
<UserControl x:Class="DIPOL_UF.Controls.CameraTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:enm="clr-namespace:ANDOR_CS.Enums;assembly=ANDOR_CS"
             xmlns:cntr="clr-namespace:DIPOL_UF.Controls"
             xmlns:dvms="clr-namespace:DIPOL_UF.ViewModels"
             xmlns:vs="clr-namespace:DIPOL_UF.Views"
             xmlns:props="clr-namespace:DIPOL_UF.Properties"
             xmlns:extensions="clr-namespace:DIPOL_UF.Extensions"
             mc:Ignorable="d" Style="{StaticResource ResourceKey=ContentFont}"
             d:DesignHeight="800" d:DesignWidth="1000"
             d:DataContext="{d:DesignInstance Type=dvms:CameraTabViewModel}">
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger
            EventName="ViewRequested"
            SourceObject="{Binding AcquisitionSettingsWindow}">
            <extensions:ShowViewAction
                Owner="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Proxy="{Binding AcquisitionSettingsWindow}"
                Type="{x:Type vs:AcquisitionSettingsView}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger
            EventName="ViewRequested"
            SourceObject="{Binding JobSettingsWindow}">
            <extensions:ShowViewAction
                Owner="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Proxy="{Binding JobSettingsWindow}"
                Type="{x:Type vs:JobSettingsView}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <ScrollViewer
        HorizontalContentAlignment="Center" HorizontalScrollBarVisibility="Auto"
        VerticalContentAlignment="Top" VerticalScrollBarVisibility="Auto">
        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="330"/>
                <ColumnDefinition Width="Auto" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <!--Custom Image Presenter-->
            <cntr:DipolImagePresenter Grid.Row="1" Grid.Column="0" 
                                       Height="700"
                                       VerticalAlignment="Top" HorizontalAlignment="Left" 
                                       Width="600" MaxWidth="600"
                                       Margin="5,5,30,5"
                                       DataContext="{Binding DipolImagePresenter}"/>
            <!--RHS Controls grid-->
            <Grid Column ="1" Grid.Row="1" HorizontalAlignment="Right" 
                  VerticalAlignment="Top" MinHeight="500">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="135"/>
                    <ColumnDefinition Width="135"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5.5*" MinHeight="250"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--Cooler slider/bar-->
                <Grid Grid.Column="0" Grid.Row="0" Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.4*"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Text="{extensions:Text Key=CameraTab_Cooler}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1"
                               VerticalAlignment="Top" HorizontalAlignment="Right"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Text="{Binding MaximumAllowedTemperature, StringFormat='\{0:F0} C'}"/>
                    <TextBlock Grid.Column="0" Grid.Row="3" 
                               VerticalAlignment="Bottom" HorizontalAlignment="Right"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Text="{Binding MinimumAllowedTemperature, StringFormat='\{0:F0} C'}"/>
                    <Slider Name="TempSetSlider"
                            Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" 
                            HorizontalAlignment="Center"
                            Margin="{StaticResource ResourceKey=VerticalSliderMargin}"
                            Orientation="Vertical"
                            Minimum="{Binding MinimumAllowedTemperature}"
                            Maximum="{Binding MaximumAllowedTemperature}"
                            Value="{Binding
                                Path=TargetTemperature,
                                Mode=TwoWay,
                                UpdateSourceTrigger=PropertyChanged,
                                Converter={StaticResource ResourceKey=TypeConverter},
                                ValidatesOnNotifyDataErrors=True}">
                        <Slider.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolToBoolMultiConverter}">
                                <Binding Path="IsAcquiring" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="CanControlTemperature"/>
                            </MultiBinding>
                        </Slider.IsEnabled>
                       
                    </Slider>

                    <ProgressBar Grid.Column="2" Grid.Row="1" Grid.RowSpan="3"
                                 Width="13" HorizontalAlignment="Center"
                                 Margin="{StaticResource ResourceKey=VerticalPBMargin}"
                                 Orientation="Vertical" IsIndeterminate="False"
                                 IsEnabled="{Binding CanQueryTemperature}"
                                 Minimum="{Binding MinimumAllowedTemperature, Mode=OneTime}"
                                 Maximum="{Binding MaximumAllowedTemperature, Mode=OneTime}"
                                 Value="{Binding CurrentTemperature, Mode=OneWay}"
                                 Foreground="{Binding CurrentTemperature,
                                    Converter={StaticResource TemperatureToBrushConverter},
                                    ConverterParameter={StaticResource TemperatureColorBrushCollection}}">
                    </ProgressBar>
                </Grid>
                <!--Cooler textbox/button-->
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="2">
                    <TextBox 
                            Name="TempControlTextBox" 
                            HorizontalContentAlignment="Right"
                            Style="{StaticResource TextBoxWithErrors}"
                            Text="{extensions:ValidationBinding TargetTemperatureText}">
                        <TextBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource ResourceKey=BoolToBoolMultiConverter}">
                                <Binding Path="IsAcquiring" Mode="OneWay" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="CanControlTemperature" Mode="OneWay"/>
                            </MultiBinding>
                        </TextBox.IsEnabled>
                    </TextBox>
                    <Button Command="{Binding CoolerCommand}">
                        <Button.Content>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style 
                                        BasedOn="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                        TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger 
                                                        Binding="{Binding
                                                            Path = CoolerMode,
                                                            Mode=OneWay}" 
                                                        Value="{x:Static enm:Switch.Enabled}">
                                                <Setter Property="TextBlock.Text" 
                                                        Value="{x:Static props:Localization.CameraTab_Cooler_Stop}"/>
                                            </DataTrigger>
                                            <DataTrigger 
                                                        Binding="{Binding
                                                            Path = CoolerMode,
                                                            Mode=OneWay}" 
                                                        Value="{x:Static enm:Switch.Disabled}">
                                                <Setter Property="TextBlock.Text" 
                                                        Value="{x:Static props:Localization.CameraTab_Cooler_Start}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                        <Button.Style>
                            <Style 
                                    BasedOn="{StaticResource ResourceKey=BasicButtonStyle}"
                                    TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger 
                                                Binding="{Binding
                                                    Path = CoolerMode,
                                                    Mode=OneWay}" 
                                                Value="{x:Static enm:Switch.Disabled}">
                                        <Setter Property="Button.Background" 
                                                Value="{StaticResource ResourceKey=PositiveEffectButtonBackgroundColor}"/>
                                        <Setter Property="Button.Foreground" 
                                                Value="{StaticResource ResourceKey=PositiveEffectButtonForegroundColor}"/>
                                    </DataTrigger>
                                    <DataTrigger 
                                                Binding="{Binding
                                                    Path = CoolerMode,
                                                    Mode=OneWay}" 
                                                Value="{x:Static enm:Switch.Enabled}">
                                        <Setter Property="Button.Background" 
                                                Value="{StaticResource ResourceKey=NegativeEffectButtonBackgroundColor}"/>
                                        <Setter Property="Button.Foreground" 
                                                Value="{StaticResource ResourceKey=NegativeEffectButtonForegroundColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <!--Fan slider-->
                <Grid Grid.Column="1" Grid.Row="0" Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="15" Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" 
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Text="{extensions:Text Key=CameraTab_Fan}"/>
                    <Slider Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"
                            Orientation="Vertical" Margin="{StaticResource ResourceKey=VerticalSliderMargin}"
                            TickFrequency="{Binding Path=FanTickFrequency}" 
                            IsSnapToTickEnabled="True"
                            Minimum="0" Maximum="2"
                            Value="{Binding FanMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Slider.IsEnabled>
                            <MultiBinding Converter="{StaticResource ResourceKey=BoolToBoolMultiConverter}">
                                <Binding Path="IsAcquiring" Mode="OneWay" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="CanControlFan" Mode="OneWay"/>
                            </MultiBinding>
                        </Slider.IsEnabled>
                    </Slider>
                    <TextBlock Grid.Column="1"  Grid.Row="1" 
                               HorizontalAlignment="Left" VerticalAlignment="Top"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Margin="0,-5, 0, 0"
                               Text="{extensions:Text
                                    Key=General_FanMode_Full,
                                    Format='- {0}'}"/>
                    <TextBlock Grid.Column="1" Grid.Row="2" 
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Margin="0, -5, 0, 0"
                               Text="{extensions:Text
                                    Key=General_FanMode_Low,
                                    Format='- {0}'}"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" 
                               HorizontalAlignment="Left" VerticalAlignment="Bottom"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Margin="0, -5, 0, 0"
                               Text="{extensions:Text
                                    Key=General_FanMode_Off,
                                    Format='- {0}'}"/>
                </Grid>
                <!--Shutters-->
                <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                      VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Margin="4, 2, 4, 2"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="{extensions:Text Key=CameraTab_Shutter_Internal}"/>
                    <TextBlock Grid.Column="0" Grid.Row="1"
                               Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                               Margin="4, 2, 4, 2"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Text="{extensions:Text Key=CameraTab_Shutter_External}"/>
                    <ComboBox Grid.Column="1" Grid.Row="0"
                              Style="{StaticResource ResourceKey=ComboBoxStyle}"
                              ItemsSource="{Binding Source={StaticResource ResourceKey=ShutterModeEnumProvider}}"
                              ItemTemplate="{StaticResource ShutterComboBoxItem}"
                              SelectedItem="{Binding InternalShutterState, Mode=TwoWay}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource ResourceKey=BoolToBoolMultiConverter}">
                                <Binding Path="IsAcquiring" Mode="OneWay" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="CanControlInternalShutter" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                    <ComboBox Grid.Column="1" Grid.Row="1"
                              Style="{StaticResource ResourceKey=ComboBoxStyle}"
                              SelectedValue="{Binding ExternalShutterMode, Mode=TwoWay}"
                              ItemsSource="{Binding Source={StaticResource ResourceKey=ShutterModeEnumProvider}}"
                              ItemTemplate="{StaticResource ShutterComboBoxItem}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource ResourceKey=BoolToBoolMultiConverter}">
                                <Binding Path="IsAcquiring" Mode="OneWay" Converter="{StaticResource NotConverter}"/>
                                <Binding Path="CanControlExternalShutter" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>
                </Grid>

                <!--Acquisition settings button-->
                <Button  Grid.Column="0" Grid.Row="3" 
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Style="{StaticResource ResourceKey=BasicButtonStyle}"
                         Content="{extensions:Text Key=CameraTab_AcquisitionSettings}"
                         Command="{Binding SetUpAcquisitionCommand}"/>

                <!-- Acquire images button -->
                <Button Grid.Column="0" Grid.Row="4"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Command="{Binding StartAcquisitionCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ResourceKey=BasicButtonStyle}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAcquiring, Mode=OneWay}" Value="True">
                                    <Setter Property="Content" Value="{extensions:Text Key=CameraTab_Imaging_Stop}"/>
                                    <Setter Property="Button.Background" 
                                        Value="{StaticResource ResourceKey=NegativeEffectButtonBackgroundColor}"/>
                                    <Setter Property="Button.Foreground" 
                                        Value="{StaticResource ResourceKey=NegativeEffectButtonForegroundColor}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding IsAcquiring, Mode=OneWay}" Value="False" >
                                    <Setter Property="Content" Value="{extensions:Text Key=CameraTab_Imaging_Start}"/>
                                    <Setter Property="Button.Background" 
                                        Value="{StaticResource ResourceKey=PositiveEffectButtonBackgroundColor}"/>
                                    <Setter Property="Button.Foreground" 
                                        Value="{StaticResource ResourceKey=PositiveEffectButtonForegroundColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Job settings -->
                <Button  Grid.Column="1" Grid.Row="3" 
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Style="{StaticResource ResourceKey=BasicButtonStyle}"
                         Content="{extensions:Text Key=CameraTab_JobSettings}"
                         Command="{Binding SetUpJobCommand}"/>

                <!-- Job button -->
                <Button Grid.Column="1" Grid.Row="4"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Command="{Binding StartJobCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ResourceKey=BasicButtonStyle}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsJobInProgress, Mode=OneWay}" Value="True">
                                    <Setter Property="Content" Value="{extensions:Text Key=CameraTab_Job_Stop}"/>
                                    <Setter Property="Button.Background" 
                                            Value="{StaticResource ResourceKey=NegativeEffectButtonBackgroundColor}"/>
                                    <Setter Property="Button.Foreground" 
                                            Value="{StaticResource ResourceKey=NegativeEffectButtonForegroundColor}"/>
                                </DataTrigger>
                                <DataTrigger  Binding="{Binding IsJobInProgress, Mode=OneWay}" Value="False" >
                                    <Setter Property="Content" Value="{extensions:Text Key=CameraTab_Job_Start}"/>
                                    <Setter Property="Button.Background" 
                                            Value="{StaticResource ResourceKey=PositiveEffectButtonBackgroundColor}"/>
                                    <Setter Property="Button.Foreground" 
                                            Value="{StaticResource ResourceKey=PositiveEffectButtonForegroundColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Timing table -->
                <TextBlock HorizontalAlignment="Stretch"
                           Grid.Column="0" Grid.Row="5"
                           Style="{StaticResource ContentFont_TextBlock}"
                           Text="{extensions:Text Key=CameraTab_EstimatedTime}"/>
                <TextBox Style="{StaticResource TextBoxStyle}" 
                         Grid.Column="1" Grid.Row="5"
                         IsReadOnly="True" Focusable="False" 
                         HorizontalContentAlignment="Right"
                         HorizontalAlignment="Stretch"
                         Text="{Binding ExposureTime, 
                            Mode=OneWay,
                            StringFormat={extensions:Text Key=General_ExposureFloatFormat}}"/>
            </Grid>
            <ProgressBar Grid.Row="2" Grid.Column="0"
                         MaxWidth="450"
                         Style="{StaticResource ProgressBarStyle}"
                         Minimum="{Binding AcquisitionPbMin}"
                         Maximum="{Binding AcquisitionPbMax}"
                         Value="{Binding AcquisitionPbVal, Mode=OneWay}"/>
        </Grid>
    </ScrollViewer>
</UserControl>
