<UserControl x:Class="DIPOL_UF.Controls.CameraTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:enm="clr-namespace:ANDOR_CS.Enums;assembly=ANDOR_CS"
             xmlns:cmnds="clr-namespace:DIPOL_UF.Commands"
             xmlns:local="clr-namespace:DIPOL_UF.Controls"
             mc:Ignorable="d" Style="{StaticResource ResourceKey=ContentFont}"
             d:DesignHeight="500" d:DesignWidth="700">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="250"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="135"/>
            <ColumnDefinition Width="90"/>
        </Grid.ColumnDefinitions>
        <!--PLACEHOLDER FOR IMAGE CONTROL-->
        <Canvas Grid.Row="0" Grid.Column="0"
                Grid.RowSpan="3"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                Background="Aquamarine"></Canvas>
        <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding}"/>
        <Label Grid.Row="1" Grid.Column="1" BorderThickness="2" BorderBrush="Black">Detailed status</Label>
        <Grid Grid.Column="2" Grid.Row="1" Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="Cooler"/>
            <TextBlock Grid.Column="0" Grid.Row="1"
                       VerticalAlignment="Top" HorizontalAlignment="Right"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="{Binding Value.MaximumAllowedTemperature, StringFormat='\{0:F0} C'}"/>
            <TextBlock Grid.Column="0" Grid.Row="3" 
                       VerticalAlignment="Bottom" HorizontalAlignment="Right"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="{Binding Value.MinimumAllowedTemperature, StringFormat='\{0:F0} C'}"/>
            <Slider Grid.Column="1" Grid.Row="1" Grid.RowSpan="3" 
                    HorizontalAlignment="Center"
                    Margin="{StaticResource ResourceKey=VerticalSliderMargin}"
                    Orientation="Vertical" Name="TempSetSlider"
                    IsEnabled="{Binding Value.CanControlTemperature, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Minimum="{Binding Value.MinimumAllowedTemperature, Mode=OneTime}"
                    Maximum="{Binding Value.MaximumAllowedTemperature, Mode=OneTime}"
                    Value="{Binding
                        Path=Value.TargetTemperature,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged,
                        Converter={StaticResource ResourceKey=TypeConverter}}"/>

            <ProgressBar Grid.Column="2" Grid.Row="1" Grid.RowSpan="3"
                         Width="13" HorizontalAlignment="Center"
                         Margin="{StaticResource ResourceKey=VerticalPBMargin}"
                             Orientation="Vertical" IsIndeterminate="False"
                             Minimum="{Binding Value.MinimumAllowedTemperature, Mode=OneTime}"
                             Maximum="{Binding Value.MaximumAllowedTemperature, Mode=OneTime}"
                             IsEnabled="{Binding Value.CanQueryTemperature, Mode=OneTime}">
                <ProgressBar.Value>
                    <MultiBinding Mode="OneWay"
                            Converter="{StaticResource ResourceKey=CameraStatsToValueMultiConverter}"
                            ConverterParameter="Temp"
                            UpdateSourceTrigger="PropertyChanged">
                        <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                     Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                        <Binding Path="Key"/>
                    </MultiBinding>
                </ProgressBar.Value>
                <ProgressBar.Foreground>
                    <MultiBinding Mode="OneWay"
                                      Converter="{StaticResource ResourceKey=TemperatureToBrushMultiConverter}"
                                      ConverterParameter="{StaticResource TemperatureColorBrushCollection}"
                                      UpdateSourceTrigger="PropertyChanged">
                        <Binding ElementName="DipolWindow" Path="DataContext.CameraRealTimeStats"
                                     Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Path="Key"/>
                    </MultiBinding>
                </ProgressBar.Foreground>
            </ProgressBar>
         
        </Grid>
        <StackPanel Grid.Column="2" Grid.Row="2" Margin="2">
            <TextBox 
                    Name="TempControlTextBox" Margin="2"
                    HorizontalContentAlignment="Right"
                    IsEnabled="{Binding Value.CanControlTemperature, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    TextChanged="{cmnds:EventToCommand VerifyTextInputCommand, PropertyName=Value}"
                    PreviewTextInput="{cmnds:EventToCommand VerifyTextInputCommand, PropertyName=Value}"
                    Text="{Binding
                        Path=Value.TargetTemperature,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged,
                        Converter={StaticResource ResourceKey=SingleDoubleToStringConverter},
                        ConverterParameter='F1'}">

            </TextBox>
            <Button Command="{Binding Value.ControlCoolerCommand}">
                <Button.Content>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style 
                                BasedOn="{StaticResource ResourceKey=ContentFont_TextBlock}"
                                TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Enabled}">
                                        <Setter Property="TextBlock.Text" Value="Cooling"/>
                                    </DataTrigger>
                                    <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Disabled}">
                                        <Setter Property="TextBlock.Text" Value="Off"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Button.Content>
                <Button.Style>
                    <Style 
                        BasedOn="{StaticResource ResourceKey=BasicButtonStyle}"
                        TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="auto"/>
                        <Setter Property="Height" Value="auto"/>
                        <Style.Triggers>
                            <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Enabled}">
                                <Setter Property="Button.Background" 
                                            Value="{StaticResource ResourceKey=PositiveEffectButtonBackgroundColor}"/>
                                <Setter Property="Button.Foreground" 
                                            Value="{StaticResource ResourceKey=PositiveEffectButtonForegroundColor}"/>
                            </DataTrigger>
                            <DataTrigger 
                                            Binding="{Binding
                                                Path = Value.Camera.CoolerMode,
                                                Mode=OneWay,
                                                UpdateSourceTrigger=PropertyChanged}" 
                                            Value="{x:Static enm:Switch.Disabled}">
                                <Setter Property="Button.Background" 
                                                    Value="{StaticResource ResourceKey=NegativeEffectButtonBackgroundColor}"/>
                                <Setter Property="Button.Foreground" 
                                                    Value="{StaticResource ResourceKey=NegativeEffectButtonForegroundColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <Grid Grid.Column="3" Grid.Row="1" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="Fan"/>
                <Slider Grid.Column="0" Grid.Row="1" Grid.RowSpan="3"
                        Orientation="Vertical" Margin="{StaticResource ResourceKey=VerticalSliderMargin}"
                        TickFrequency="{Binding 
                            Path=Value.LowFanModeTickStep, 
                            Converter={StaticResource ResourceKey=TypeConverter}}" 
                        IsSnapToTickEnabled="True"
                        Minimum="0" Maximum="2"
                        Value="{Binding Value.FanMode, Mode=TwoWay, Converter={StaticResource ResourceKey=TypeConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" 
                       HorizontalAlignment="Left" VerticalAlignment="Top"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="- Full" Margin="0,-5, 0, 0"/>
                <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" 
                       HorizontalAlignment="Left" VerticalAlignment="Center"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="- Low"/>
                <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="3" 
                       HorizontalAlignment="Left" VerticalAlignment="Bottom"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Text="- Off"/>
        </Grid>
        <Grid Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3"
              VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Margin="4, 2, 4, 2"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Text="Internal"/>
            <TextBlock Grid.Column="0" Grid.Row="1"
                       Style="{StaticResource ResourceKey=ContentFont_TextBlock}"
                       Margin="4, 2, 4, 2"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Text="External"/>
            <ComboBox Grid.Column="1" Grid.Row="0"
                      IsEnabled="{Binding Value.CanControlShutter}"
                      Style="{StaticResource ResourceKey=ComboBoxStyle}"
                      ItemsSource="{Binding 
                        Source={StaticResource ResourceKey=ShutterModeEnumProvider}}"
                      SelectedValue="{Binding 
                        Value.InternalShutterState, 
                        Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged}"/>
            <ComboBox Grid.Column="1" Grid.Row="1"
                      IsEnabled="{Binding Value.CanControlInternalExternalShutter}"
                      Style="{StaticResource ResourceKey=ComboBoxStyle}"
                      ItemsSource="{Binding 
                        Source={StaticResource ResourceKey=ShutterModeEnumProvider}}"/>
        </Grid>
    </Grid>
</UserControl>
